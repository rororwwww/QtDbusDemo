/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.qdbus.demo.xml -p mainwindowinterface
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MAINWINDOWINTERFACE_H
#define MAINWINDOWINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.qdbus.server
 */
class ComQdbusServerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.qdbus.server"; }

public:
    ComQdbusServerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~ComQdbusServerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> server_get(const QString &name, int age, const QString &id, const QString &tel, const QString &adress, double temperature)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(name) << QVariant::fromValue(age) << QVariant::fromValue(id) << QVariant::fromValue(tel) << QVariant::fromValue(adress) << QVariant::fromValue(temperature);
        return asyncCallWithArgumentList(QStringLiteral("server_get"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void send_to_client_error();
    void send_to_client_ok();
};

namespace com {
  namespace qdbus {
    typedef ::ComQdbusServerInterface server;
  }
}
#endif
